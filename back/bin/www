var app = require('../app')
var debug = require('debug')('xk-demo:server')
var http = require('http')

var port = normalizePort(process.env.PORT || '8088')
app.set('port', port)

var server = http.createServer(app)

server.listen(port)
server.on('error', onError)
server.on('listening', onListening)

function normalizePort(val) {
  var port = parseInt(val, 10)

  if (isNaN(port)) {
    return val
  }

  if (port >= 0) {
    return port
  }

  return false
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

var fs = require('fs')
function getPackageJson() {
  var _packageJson = fs.readFileSync('./package.json')
  return JSON.parse(_packageJson)
}
function onListening() {
  var addr = server.address()
  var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port
  console.log(`[SYSTERM]${getPackageJson().name}应用启动中...`)
  console.log(`[SYSTERM]应用部署在 ${bind}`)
}
